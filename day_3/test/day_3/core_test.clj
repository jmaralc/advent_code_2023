(ns day-3.core-test
  (:require [clojure.test :refer :all]
            [day-3.core :refer :all]))

(def test-input
  "467..114..
...*......
..35..633.
......#...
617*......
.....+.58.
..592.....
......755.
...$.*....
.664.598.."
  )
(def test-input2 ".......................661.........................485..565.......344.......325.....................................841.....725.............
....*609..131................512.......................*................536*..............462/..-...60..424.........@....$.*................
.316.........*.......39..................@.630......377........919...........98................789..*..*..............788..2.......=..564...
...........431...535...*...............622.-..../.................*..........*.......682...........108.116....@...-...............299.......")

(def test-numbers [565, 325, 841, 725, 609, 131, 536, 462, 60, 424, 316, 39, 630, 377, 919, 98, 789, 788, 2, 431, 622, 682, 108, 116, 299, 428, 378, 844, 416, 586, 537, 27, 871, 331, 492, 878, 390, 739, 496, 867, 867, 867, 344, 558, 535, 644, 404, 381, 578, 10, 818, 929, 934, 119, 31, 734, 847, 217, 321, 509, 315, 654, 60, 925, 747, 559, 430, 226, 290, 848, 546, 507, 94, 359, 528, 996, 351, 638, 433, 337, 226, 859, 378, 648, 183, 126, 208, 626, 499, 803, 642, 235, 518, 813, 990, 699, 133, 68, 79, 838, 447, 696, 586, 243, 224, 392, 275, 699, 177, 230, 593, 326, 683, 761, 26, 262, 150, 908, 819, 785, 276, 618, 401, 599, 34, 676, 342, 473, 889, 888, 454, 723, 141, 958, 416, 94, 212, 826, 552, 569, 728, 143, 287, 60, 872, 886, 171, 815, 680, 633, 234, 432, 203, 275, 65, 341, 246, 272, 922, 967, 495, 161, 474, 97, 84, 400, 295, 805, 915, 419, 979, 932, 729, 215, 81, 263, 567, 812, 458, 682, 179, 348, 906, 428, 798, 668, 552, 99, 85, 4, 29, 594, 107, 171, 98, 896, 491, 412, 12, 326, 705, 4, 332, 949, 750, 974, 342, 558, 794, 459, 342, 273, 601, 735, 627, 889, 131, 689, 450, 390, 994, 793, 241, 89, 14, 912, 698, 953, 240, 87, 324, 618, 328, 538, 307, 920, 386, 780, 475, 719, 410, 384, 999, 756, 268, 701, 72, 63, 43, 193, 674, 670, 95, 893, 16, 407, 258, 264, 298, 202, 187, 88, 53, 931, 759, 385, 938, 297, 723, 930, 692, 283, 349, 981, 207, 843, 260, 677, 389, 954, 603, 713, 745, 411, 359, 922, 718, 888, 182, 206, 896, 173, 383, 145, 622, 382, 180, 141, 89, 238, 714, 575, 539, 114, 721, 471, 307, 968, 250, 836, 498, 59, 909, 601, 117, 435, 944, 56, 498, 730, 680, 95, 517, 150, 142, 473, 262, 577, 736, 70, 111, 165, 741, 97, 654, 428, 748, 823, 48, 892, 350, 760, 148, 440, 731, 563, 260, 227, 795, 27, 107, 219, 23, 226, 369, 41, 136, 546, 981, 454, 635, 782, 560, 896, 854, 694, 340, 498, 41, 959, 486, 63, 810, 641, 532, 642, 90, 76, 325, 539, 407, 9, 550, 105, 810, 538, 718, 317, 519, 303, 493, 462, 647, 875, 641, 644, 154, 588, 44, 140, 228, 43, 132, 794, 628, 669, 110, 579, 348, 32, 491, 646, 506, 708, 74, 24, 698, 532, 902, 722, 700, 878, 885, 351, 799, 814, 238, 339, 428, 825, 965, 862, 723, 243, 852, 784, 472, 814, 603, 151, 279, 617, 849, 91, 246, 218, 659, 113, 128, 691, 972, 571, 934, 455, 379, 594, 80, 654, 421, 456, 2, 535, 410, 553, 409, 173, 779, 646, 418, 596, 70, 493, 317, 865, 323, 696, 202, 952, 187, 767, 318, 1, 147, 389, 921, 301, 67, 540, 149, 827, 347, 956, 980, 204, 341, 154, 695, 20, 183, 177, 66, 699, 495, 460, 4, 347, 36, 912, 765, 142, 163, 885, 480, 805, 587, 289, 310, 389, 843, 417, 628, 803, 482, 556, 294, 33, 79, 358, 407, 873, 542, 41, 758, 176, 442, 766, 284, 842, 856, 422, 94, 799, 318, 576, 111, 788, 720, 168, 840, 989, 468, 419, 198, 282, 591, 101, 340, 187, 746, 779, 456, 346, 693, 94, 72, 696, 999, 124, 246, 434, 173, 165, 925, 608, 827, 634, 418, 185, 311, 808, 372, 824, 694, 360, 43, 645, 935, 516, 555, 33, 576, 810, 592, 740, 665, 968, 499, 775, 882, 998, 303, 433, 280, 147, 751, 608, 560, 827, 227, 448, 529, 465, 554, 714, 192, 999, 28, 706, 157, 679, 741, 818, 811, 412, 376, 955, 63, 399, 613, 444, 972, 697, 600, 965, 354, 392, 827, 326, 323, 483, 381, 972, 373, 9, 289, 239, 341, 329, 801, 638, 659, 358, 29, 695, 863, 310, 941, 216, 311, 358, 786, 330, 842, 11, 279, 686, 932, 666, 533, 712, 801, 544, 972, 353, 524, 795, 394, 586, 562, 629, 184, 946, 348, 670, 63, 428, 918, 850, 889, 673, 110, 221, 337, 560, 926, 809, 627, 344, 832, 216, 624, 78, 915, 701, 181, 193, 460, 639, 558, 138, 91, 804, 985, 429, 892, 321, 727, 991, 39, 633, 213, 623, 601, 919, 378, 318, 34, 183, 399, 297, 973, 622, 855, 684, 335, 733, 576, 597, 686, 371, 98, 23, 119, 777, 901, 412, 102, 754, 332, 47, 861, 539, 495, 801, 404, 777, 577, 577, 978, 990, 236, 339, 687, 598, 349, 723, 864, 972, 196, 491, 335, 372, 339, 633, 29, 4, 251, 250, 908, 356, 230, 324, 943, 325, 726, 690, 646, 214, 468, 999, 944, 751, 219, 837, 107, 271, 210, 390, 917, 996, 790, 128, 905, 277, 320, 936, 835, 640, 581, 167, 392, 29, 885, 369, 708, 106, 223, 817, 277, 795, 296, 172, 633, 229, 679, 806, 10, 456, 95, 536, 12, 914, 458, 214, 995, 97, 735, 370, 334, 876, 950, 837, 518, 761, 414, 794, 813, 718, 759, 403, 463, 238, 41, 452, 2, 435, 468, 103, 11, 927, 282, 234, 229, 301, 678, 100, 954, 182, 737, 916, 890, 118, 625, 67, 312, 865, 382, 516, 973, 874, 153, 373, 979, 469, 375, 765, 99, 733, 828, 669, 284, 371, 168, 762, 4, 565, 226, 562, 190, 281, 257, 889, 57, 210, 47, 169, 549, 414, 744, 503, 208, 643, 350, 289, 323, 856, 458, 104, 931, 855, 89, 469, 882, 594, 777, 390, 422, 355, 654, 81, 282, 630, 195, 568, 877, 419, 148, 768, 471, 393, 163, 298, 820, 582, 952, 268, 733, 59, 403, 14, 502, 231, 970, 981, 711, 261, 701, 323, 993, 557, 46, 714, 659, 134, 623, 677, 730, 846, 91, 405, 296, 295, 740, 345, 792, 834, 100, 891, 764, 697, 570, 620, 508, 295, 13, 340, 134, 247, 660, 705, 165, 521, 824, 372, 290, 844, 825, 867, 627, 128, 777, 629, 788, 361, 805, 732, 914, 743, 637, 880, 849, 425, 946, 590, 302, 748, 120, 271, 70, 207, 443, 263, 680, 793, 720, 555, 184, 509, 811, 772, 272, 134, 374, 573, 231, 230, 981, 707, 634, 787, 93, 909, 70, 199, 59, 490, 525, 676, 829, 324, 189, 791, 236, 687, 505, 777])
;([0 2] [2 2] [2 6] [4 2] [6 4] [7 6] [9 2] [9 5])

(deftest detect-engine-characters-position
  (testing "should return the position of all the engine characters"
    (is (= (detect-engine-characters test-input) [[1,3] [3,6] [4,3],[5,5],[8,3],[8,5]])))
  )

(deftest detect-engine-numbers-position
  (testing "should return the position of all the engine numbers"
    (is (= (detect-engine-numbers  "467..114..") [[0,0] [0,1] [0,2],[0,5],[0,6],[0,7]])))
  )

(deftest compute-taxcab-distance
  (testing "should return the taxicab distance between two points"
    (is (= (taxicab-distance [0 0] [1 0]) 1))))

(deftest get-close-engine-numbers
  (testing "should return the numbers that are touching a engine character"
    (is (= (get-number-neighbours [1,3] [[0,0] [0,1] [0,2],[0,5],[0,6],[0,7]]) [[0,2]]))))

(deftest merge-consecutive-numbers
  (testing "should return just one numbers when the position of two numbers is consecutive"
    (is (= (neighbours-positions? [0,1] [0,2]) true))
    (is (= (neighbours-positions? [0,1] [0,3]) false))
    (is (= (neighbours-positions? [0,1] [1,1]) false))
    )
  )

(def test-input-remove-neighbours [[1 5] [2 3] [0 56] [2 54] [0 76] [1 74] [1 92] [2 95] [2 96] [2 97] [0 116] [0 117] [2 120] [0 124] [2 123] [1 12] [3 12] [3 13] [3 40] [3 41] [1 100] [1 101] [3 99] [3 100] [3 101] [1 104] [3 103] [3 104] [3 130] [3 131] [3 132] [2 22] [2 43] [2 44] [2 65] [2 77] [2 78]])
(deftest remove-neighbours-test
  (testing "should return the initial candidates for engine numbers")
  (is (= (remove-neighbours test-input-remove-neighbours [] 0) [[0 56] [0 76] [0 116] [0 124] [1 5] [1 12] [1 74] [1 92] [1 100] [1 104] [2 3] [2 22] [2 43] [2 54] [2 65] [2 77] [2 95] [2 120] [2 123] [3 12] [3 40] [3 99] [3 103] [3 130]]))
  )

(deftest get-candidate-positions-test
  (testing "should return the initial candidates for engine numbers")
  (is (= (get-candidate-positions test-input2) [[0 56] [0 76] [0 116] [0 124] [1 5] [1 12] [1 74] [1 92] [1 100] [1 104] [2 3] [2 22] [2 43] [2 54] [2 65] [2 77] [2 95] [2 120] [2 123] [3 12] [3 40] [3 99] [3 103] [3 130]]
         ))
  )

(deftest get-initial-detected-engine-numbers
  (testing "should return the initial candidates for engine numbers")
  (is (= (get-candidate-numbers test-input) ["7" "3" "6" "7" "2" "7" "6" "5"]))
  )

(deftest get-whole-number-from-initial-position
  (testing "should return the whole number of a string")
  (is (= (get-whole-numbers ["467..114.."] [0 2]) 467))
  (is (= (get-whole-numbers ["467..114.."] [0 0]) 467))
  (is (= (get-whole-numbers ["467..114"] [0 5]) 114))
  (is (= (get-whole-numbers ["4672211422"] [0 5]) 4672211422))
  (is (= (get-whole-numbers ["...$2...."] [0 4]) 2))
  )

(deftest get-final-engine-numbers
  (testing "should return the initial candidates for engine numbers")
  (is (= (get-part-numbers (slurp "./resources/input.txt")) test-numbers))
  )

(deftest get-final-engine-numbers-2
  (testing "should return the initial candidates for engine numbers")
  (is (= (get-part-numbers test-input2) [565
                                          325
                                          841
                                          725
                                          609
                                          131
                                          536
                                          462
                                          60
                                          424
                                          316
                                          39
                                          630
                                          377
                                          919
                                          98
                                          789
                                          788
                                          2
                                          431
                                          622
                                          108
                                          116
                                          299]))
  )

(deftest get-sum-of-part-numbers
  (testing "should return the sum of the part numbers of an engine")
  (is (= (sum-part-numbers (slurp "./resources/input.txt")) (reduce + test-numbers)))
  )

(deftest solve-file
  (testing "should return the sum of the part numbers of an engine loaded from a file")
  (is (= (get-sum-of-part-numbers-of-file "./resources/input.txt") 519444))
  )
